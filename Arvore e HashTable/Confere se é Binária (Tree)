#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

typedef struct binaryTree{
  int item;
  struct binaryTree *left;
  struct binaryTree *right;
} binaryTree;

binaryTree *createBinaryTree(int item, binaryTree *left,binaryTree *right){
  binaryTree *newTree=(binaryTree*)malloc(sizeof(binaryTree));
  newTree->item=item;
  newTree->left=left;
  newTree->right=right;
  return newTree;
}

int checkTree(binaryTree *root,int min,int max){
  if(root==NULL) return 1;
  if(root->item<min || root->item>max) return 0;
  return checkTree(root->left,min,root->item) && checkTree(root->right,root->item,max);
}

binaryTree *createTree(){
  char caract;
  int item;
  scanf("%d",&item);

  binaryTree *newNode=createBinaryTree(item, NULL, NULL);
  scanf(" %c",&caract);

  if(caract==')') return NULL;

  if(caract=='('){
    newNode->left=createTree();
  }
  scanf( "%c",&caract);
  if(caract=='('){
    newNode->right=createTree();
  }
  scanf(" %c",&caract);
  return newNode;
}

int main(){
  char c;
  scanf(" %c",&c);
  binaryTree *root=createTree();
  if(checkTree(root,-2147483646,2147483647)) printf("VERDADEIRO\n");
  else printf("FALSO\n");
  return 0;
}
